---
---

<mode-toggle class="flex">
	<button
		class="justify-self-end bg-black dark:bg-white ml-4 inline-flex h-6 w-11 items-center rounded-full"
		id="mode-toggle"
		role="switch"
		type="button"
		tabindex="0"
		aria-checked="false"
		data-headlessui-state=""
		><span class="sr-only">Toggle dark mode</span><span
			id="mode-circle"
			class="light inline-block h-4 w-4 rounded-full bg-gradient-to-tr invisible"
			><span
				class="absolute top-0 right-0 w-[10px] h-[10px] rounded-full bg-white scale-[0]"
			></span>
		</span>
	</button>
</mode-toggle>

<script>
	type State = {
		class: string;
		content: string;
	};

	const meta = document.querySelector('meta[name="theme-color"]')!;
	const rootHtml = document.documentElement;
	const storageKey = "current_theme";

	const theme = {
		currentState: "",
		dark: {
			class: "dark",
			content: "#262626",
		},
		light: {
			class: "light",
			content: "#FFFFFF",
		},
	};

	function toggleTheme(state: State) {
		const modeCircle = document.querySelector("#mode-circle")!;

		rootHtml.classList.remove(theme.currentState);
		modeCircle.classList.remove(theme.currentState, "invisible");
		rootHtml.classList.add(state.class);
		modeCircle.classList.add(state.class, "duration-300");
		meta.setAttribute("content", state.content);

		theme.currentState = state.class;
		sessionStorage.setItem(storageKey, state.class);
	}

	function onPageTransition() {
		const activeTheme = theme[theme.currentState === "dark" ? "dark" : "light"];
		activeTheme && toggleTheme(activeTheme);
	}

	function onModeToggleClick() {
		const newTheme = theme[theme.currentState !== "dark" ? "dark" : "light"];
		newTheme && toggleTheme(newTheme);
	}

	function initialState() {
		const likesDark = window.matchMedia("(prefers-color-scheme: dark)");
		const session = sessionStorage.getItem(storageKey);

		return session || (likesDark.matches ? "dark" : "light");
	}

	class ModeToggle extends HTMLElement {
		private buttonElement = this.querySelector("button")!;

		constructor() {
			super();
			this.buttonElement.addEventListener("click", onModeToggleClick);
		}
	}

	customElements.define("mode-toggle", ModeToggle);

	theme.currentState = initialState();
	onPageTransition();
	document.addEventListener("astro:after-swap", onPageTransition);
</script>

<style>
	.light {
		transform: translateX(0.25rem);
		background-color: white;
	}
	.dark {
		transform: translateX(1.5rem);
		background-color: black;
	}
</style>
